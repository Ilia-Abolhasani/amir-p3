# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
bin_PROGRAMS = distance$(EXEEXT) ct2bp$(EXEEXT) ct_compare$(EXEEXT) \
	efn$(EXEEXT) newtemp$(EXEEXT) scorer$(EXEEXT) auxgen$(EXEEXT) \
	sav2plot$(EXEEXT) sav2p_num$(EXEEXT) h_num$(EXEEXT) \
	ss_count$(EXEEXT) add_dHdSTm$(EXEEXT) nafold$(EXEEXT) \
	quikfold$(EXEEXT) add_dHdSTm2$(EXEEXT) boxplot_ng$(EXEEXT) \
	ct_boxplot_ng$(EXEEXT) overlay_boxplot_ng$(EXEEXT) \
	sir_graph$(EXEEXT) mfold_datdir$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_add_dHdSTm_OBJECTS = add_dHdSTm-add-dHdSTm.$(OBJEXT)
add_dHdSTm_OBJECTS = $(am_add_dHdSTm_OBJECTS)
add_dHdSTm_LDADD = $(LDADD)
add_dHdSTm_LINK = $(F77LD) $(add_dHdSTm_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_add_dHdSTm2_OBJECTS = add_dHdSTm2-add-dHdSTm2.$(OBJEXT)
add_dHdSTm2_OBJECTS = $(am_add_dHdSTm2_OBJECTS)
add_dHdSTm2_LDADD = $(LDADD)
add_dHdSTm2_LINK = $(F77LD) $(add_dHdSTm2_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_auxgen_OBJECTS = auxgen-auxgen.$(OBJEXT)
auxgen_OBJECTS = $(am_auxgen_OBJECTS)
auxgen_LDADD = $(LDADD)
auxgen_LINK = $(F77LD) $(auxgen_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_boxplot_ng_OBJECTS = boxplot_ng.$(OBJEXT)
boxplot_ng_OBJECTS = $(am_boxplot_ng_OBJECTS)
boxplot_ng_LDADD = $(LDADD)
am_ct2bp_OBJECTS = ct2bp-ct2bp.$(OBJEXT)
ct2bp_OBJECTS = $(am_ct2bp_OBJECTS)
ct2bp_LDADD = $(LDADD)
ct2bp_LINK = $(F77LD) $(ct2bp_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ct_boxplot_ng_OBJECTS = ct_boxplot_ng.$(OBJEXT)
ct_boxplot_ng_OBJECTS = $(am_ct_boxplot_ng_OBJECTS)
ct_boxplot_ng_LDADD = $(LDADD)
am_ct_compare_OBJECTS = ct_compare-ct_compare.$(OBJEXT)
ct_compare_OBJECTS = $(am_ct_compare_OBJECTS)
ct_compare_LDADD = $(LDADD)
ct_compare_LINK = $(F77LD) $(ct_compare_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_distance_OBJECTS = distance-distance.$(OBJEXT) \
	distance-bpin.$(OBJEXT) distance-bpsrch.$(OBJEXT)
distance_OBJECTS = $(am_distance_OBJECTS)
distance_LDADD = $(LDADD)
distance_LINK = $(F77LD) $(distance_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_efn_OBJECTS = efn-efn.$(OBJEXT)
efn_OBJECTS = $(am_efn_OBJECTS)
efn_LDADD = $(LDADD)
efn_LINK = $(F77LD) $(efn_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_h_num_OBJECTS = h_num-h-num.$(OBJEXT)
h_num_OBJECTS = $(am_h_num_OBJECTS)
h_num_LDADD = $(LDADD)
h_num_LINK = $(F77LD) $(h_num_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mfold_datdir_OBJECTS = mfold_datdir.$(OBJEXT)
mfold_datdir_OBJECTS = $(am_mfold_datdir_OBJECTS)
mfold_datdir_LDADD = $(LDADD)
am__objects_1 =
am__objects_2 = nafold-bits-gnu.$(OBJEXT)
am__objects_3 = nafold-main.$(OBJEXT) nafold-rna.$(OBJEXT) \
	nafold-misc.$(OBJEXT) nafold-efiles.$(OBJEXT) \
	nafold-sort.$(OBJEXT) nafold-dc.$(OBJEXT) $(am__objects_2) \
	nafold-formid.$(OBJEXT) nafold-multid.$(OBJEXT)
am_nafold_OBJECTS = $(am__objects_1) $(am__objects_3)
nafold_OBJECTS = $(am_nafold_OBJECTS)
nafold_LDADD = $(LDADD)
nafold_LINK = $(F77LD) $(nafold_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_newtemp_OBJECTS = newtemp-newtemp.$(OBJEXT) newtemp-ion.$(OBJEXT) \
	newtemp-dc.$(OBJEXT)
newtemp_OBJECTS = $(am_newtemp_OBJECTS)
newtemp_LDADD = $(LDADD)
newtemp_LINK = $(F77LD) $(newtemp_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_overlay_boxplot_ng_OBJECTS = overlay_boxplot_ng.$(OBJEXT)
overlay_boxplot_ng_OBJECTS = $(am_overlay_boxplot_ng_OBJECTS)
overlay_boxplot_ng_LDADD = $(LDADD)
am__objects_4 = quikfold-quik.$(OBJEXT) quikfold-rna-quik.$(OBJEXT) \
	quikfold-misc-quik.$(OBJEXT) quikfold-dc.$(OBJEXT) \
	quikfold-multid.$(OBJEXT)
am_quikfold_OBJECTS = $(am__objects_4)
quikfold_OBJECTS = $(am_quikfold_OBJECTS)
quikfold_LDADD = $(LDADD)
quikfold_LINK = $(F77LD) $(quikfold_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_sav2p_num_OBJECTS = sav2p_num-sav2p-num.$(OBJEXT)
sav2p_num_OBJECTS = $(am_sav2p_num_OBJECTS)
sav2p_num_LDADD = $(LDADD)
sav2p_num_LINK = $(F77LD) $(sav2p_num_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_sav2plot_OBJECTS = sav2plot-sav2plot.$(OBJEXT)
sav2plot_OBJECTS = $(am_sav2plot_OBJECTS)
sav2plot_LDADD = $(LDADD)
sav2plot_LINK = $(F77LD) $(sav2plot_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_scorer_OBJECTS = scorer-scorer.$(OBJEXT)
scorer_OBJECTS = $(am_scorer_OBJECTS)
scorer_LDADD = $(LDADD)
scorer_LINK = $(F77LD) $(scorer_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_sir_graph_OBJECTS = sir_graph.$(OBJEXT)
sir_graph_OBJECTS = $(am_sir_graph_OBJECTS)
sir_graph_LDADD = $(LDADD)
am_ss_count_OBJECTS = ss_count-ss-count.$(OBJEXT)
ss_count_OBJECTS = $(am_ss_count_OBJECTS)
ss_count_LDADD = $(LDADD)
ss_count_LINK = $(F77LD) $(ss_count_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/boxplot_ng.Po \
	./$(DEPDIR)/ct_boxplot_ng.Po ./$(DEPDIR)/mfold_datdir.Po \
	./$(DEPDIR)/overlay_boxplot_ng.Po ./$(DEPDIR)/sir_graph.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
SOURCES = $(add_dHdSTm_SOURCES) $(add_dHdSTm2_SOURCES) \
	$(auxgen_SOURCES) $(boxplot_ng_SOURCES) $(ct2bp_SOURCES) \
	$(ct_boxplot_ng_SOURCES) $(ct_compare_SOURCES) \
	$(distance_SOURCES) $(efn_SOURCES) $(h_num_SOURCES) \
	$(mfold_datdir_SOURCES) $(nafold_SOURCES) $(newtemp_SOURCES) \
	$(overlay_boxplot_ng_SOURCES) $(quikfold_SOURCES) \
	$(sav2p_num_SOURCES) $(sav2plot_SOURCES) $(scorer_SOURCES) \
	$(sir_graph_SOURCES) $(ss_count_SOURCES)
DIST_SOURCES = $(add_dHdSTm_SOURCES) $(add_dHdSTm2_SOURCES) \
	$(auxgen_SOURCES) $(boxplot_ng_SOURCES) $(ct2bp_SOURCES) \
	$(ct_boxplot_ng_SOURCES) $(ct_compare_SOURCES) \
	$(distance_SOURCES) $(efn_SOURCES) $(h_num_SOURCES) \
	$(mfold_datdir_SOURCES) $(nafold_SOURCES) $(newtemp_SOURCES) \
	$(overlay_boxplot_ng_SOURCES) $(quikfold_SOURCES) \
	$(sav2p_num_SOURCES) $(sav2plot_SOURCES) $(scorer_SOURCES) \
	$(sir_graph_SOURCES) $(ss_count_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -DPKGDATADIR=\"$(pkgdatadir)/\"
AM_FFLAGS = -C -O3 -Wall -fno-automatic -ffixed-line-length-none 
EXTRA_DIST = pre-efiles.f pre-main.f pre-newtemp.f pre-efn.f \
pre-misc-quik.f

CLEANFILES = efiles.f efn.f misc-quik.f newtemp.f main.f
DISTCLEANFILES = efiles.f efn.f misc-quik.f newtemp.f main.f
mfold_datdir_SOURCES = mfold_datdir.c
distance_SOURCES = distance.f bpin.f bpsrch.f
distance_FFLAGS = $(AM_FFLAGS)
ct_compare_SOURCES = ct_compare.f
ct_compare_FFLAGS = $(AM_FFLAGS)
ct2bp_SOURCES = ct2bp.f
ct2bp_FFLAGS = $(AM_FFLAGS)
efn_SOURCES = efn.f efn.inc
efn_FFLAGS = $(AM_FFLAGS)
h_num_SOURCES = h-num.f
h_num_FFLAGS = $(AM_FFLAGS)
newtemp_SOURCES = newtemp.f ion.f dc.f 
newtemp_FFLAGS = $(AM_FFLAGS) 
scorer_SOURCES = scorer.f
scorer_FFLAGS = $(AM_FFLAGS)
auxgen_SOURCES = auxgen.f
auxgen_FFLAGS = $(AM_FFLAGS)
sav2plot_SOURCES = sav2plot.f maxn.inc
sav2plot_FFLAGS = $(AM_FFLAGS)
sav2p_num_SOURCES = sav2p-num.f maxn.inc
sav2p_num_FFLAGS = $(AM_FFLAGS)
ss_count_SOURCES = ss-count.f
ss_count_FFLAGS = $(AM_FFLAGS)
add_dHdSTm_SOURCES = add-dHdSTm.f
add_dHdSTm_FFLAGS = $(AM_FFLAGS)
add_dHdSTm2_SOURCES = add-dHdSTm2.f
add_dHdSTm2_FFLAGS = $(AM_FFLAGS)
boxplot_ng_SOURCES = boxplot_ng.c boxplot_setcolor.h boxplot_input.h \
boxplot_ps.h boxplot_img.h strings_img.h util.h

ct_boxplot_ng_SOURCES = ct_boxplot_ng.c ct_boxplot_general.h \
ct_boxplot_img.h ct_boxplot_ps.h ct_boxplot_read_ct.h \
ct_boxplot_setcolor.h ct_boxplot.h header_ps.h strings_img.h util.h

overlay_boxplot_ng_SOURCES = overlay_boxplot_ng.c overlay_boxplot.h \
overlay_boxplot_setcolor.h overlay_boxplot_read_ct.h strings_img.h \
overlay_boxplot_ps.h overlay_boxplot_img.h header_ps.h util.h

sir_graph_SOURCES = sir_graph.c sir_graph_color.h sir_graph_color_ann.h \
sir_graph_ann.h sir_graph_ps.h sir_graph_img.h sir_graph_ss.h sir_graph_ct.h \
sir_graph_alloc.h strings_img.h util.h

BITS = bits-gnu.f
INCL = rna.inc
NASRC = main.f rna.f misc.f efiles.f sort.f dc.f $(BITS) formid.f multid.f
QUIK = quik.f rna-quik.f misc-quik.f dc.f multid.f
nafold_SOURCES = $(INCL) maxn.inc $(NASRC)
nafold_FFLAGS = $(AM_FFLAGS)
quikfold_SOURCES = maxn1.inc quik.inc $(QUIK)
quikfold_FFLAGS = $(AM_FFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

add_dHdSTm$(EXEEXT): $(add_dHdSTm_OBJECTS) $(add_dHdSTm_DEPENDENCIES) $(EXTRA_add_dHdSTm_DEPENDENCIES) 
	@rm -f add_dHdSTm$(EXEEXT)
	$(AM_V_F77LD)$(add_dHdSTm_LINK) $(add_dHdSTm_OBJECTS) $(add_dHdSTm_LDADD) $(LIBS)

add_dHdSTm2$(EXEEXT): $(add_dHdSTm2_OBJECTS) $(add_dHdSTm2_DEPENDENCIES) $(EXTRA_add_dHdSTm2_DEPENDENCIES) 
	@rm -f add_dHdSTm2$(EXEEXT)
	$(AM_V_F77LD)$(add_dHdSTm2_LINK) $(add_dHdSTm2_OBJECTS) $(add_dHdSTm2_LDADD) $(LIBS)

auxgen$(EXEEXT): $(auxgen_OBJECTS) $(auxgen_DEPENDENCIES) $(EXTRA_auxgen_DEPENDENCIES) 
	@rm -f auxgen$(EXEEXT)
	$(AM_V_F77LD)$(auxgen_LINK) $(auxgen_OBJECTS) $(auxgen_LDADD) $(LIBS)

boxplot_ng$(EXEEXT): $(boxplot_ng_OBJECTS) $(boxplot_ng_DEPENDENCIES) $(EXTRA_boxplot_ng_DEPENDENCIES) 
	@rm -f boxplot_ng$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(boxplot_ng_OBJECTS) $(boxplot_ng_LDADD) $(LIBS)

ct2bp$(EXEEXT): $(ct2bp_OBJECTS) $(ct2bp_DEPENDENCIES) $(EXTRA_ct2bp_DEPENDENCIES) 
	@rm -f ct2bp$(EXEEXT)
	$(AM_V_F77LD)$(ct2bp_LINK) $(ct2bp_OBJECTS) $(ct2bp_LDADD) $(LIBS)

ct_boxplot_ng$(EXEEXT): $(ct_boxplot_ng_OBJECTS) $(ct_boxplot_ng_DEPENDENCIES) $(EXTRA_ct_boxplot_ng_DEPENDENCIES) 
	@rm -f ct_boxplot_ng$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ct_boxplot_ng_OBJECTS) $(ct_boxplot_ng_LDADD) $(LIBS)

ct_compare$(EXEEXT): $(ct_compare_OBJECTS) $(ct_compare_DEPENDENCIES) $(EXTRA_ct_compare_DEPENDENCIES) 
	@rm -f ct_compare$(EXEEXT)
	$(AM_V_F77LD)$(ct_compare_LINK) $(ct_compare_OBJECTS) $(ct_compare_LDADD) $(LIBS)

distance$(EXEEXT): $(distance_OBJECTS) $(distance_DEPENDENCIES) $(EXTRA_distance_DEPENDENCIES) 
	@rm -f distance$(EXEEXT)
	$(AM_V_F77LD)$(distance_LINK) $(distance_OBJECTS) $(distance_LDADD) $(LIBS)

efn$(EXEEXT): $(efn_OBJECTS) $(efn_DEPENDENCIES) $(EXTRA_efn_DEPENDENCIES) 
	@rm -f efn$(EXEEXT)
	$(AM_V_F77LD)$(efn_LINK) $(efn_OBJECTS) $(efn_LDADD) $(LIBS)

h_num$(EXEEXT): $(h_num_OBJECTS) $(h_num_DEPENDENCIES) $(EXTRA_h_num_DEPENDENCIES) 
	@rm -f h_num$(EXEEXT)
	$(AM_V_F77LD)$(h_num_LINK) $(h_num_OBJECTS) $(h_num_LDADD) $(LIBS)

mfold_datdir$(EXEEXT): $(mfold_datdir_OBJECTS) $(mfold_datdir_DEPENDENCIES) $(EXTRA_mfold_datdir_DEPENDENCIES) 
	@rm -f mfold_datdir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mfold_datdir_OBJECTS) $(mfold_datdir_LDADD) $(LIBS)

nafold$(EXEEXT): $(nafold_OBJECTS) $(nafold_DEPENDENCIES) $(EXTRA_nafold_DEPENDENCIES) 
	@rm -f nafold$(EXEEXT)
	$(AM_V_F77LD)$(nafold_LINK) $(nafold_OBJECTS) $(nafold_LDADD) $(LIBS)

newtemp$(EXEEXT): $(newtemp_OBJECTS) $(newtemp_DEPENDENCIES) $(EXTRA_newtemp_DEPENDENCIES) 
	@rm -f newtemp$(EXEEXT)
	$(AM_V_F77LD)$(newtemp_LINK) $(newtemp_OBJECTS) $(newtemp_LDADD) $(LIBS)

overlay_boxplot_ng$(EXEEXT): $(overlay_boxplot_ng_OBJECTS) $(overlay_boxplot_ng_DEPENDENCIES) $(EXTRA_overlay_boxplot_ng_DEPENDENCIES) 
	@rm -f overlay_boxplot_ng$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(overlay_boxplot_ng_OBJECTS) $(overlay_boxplot_ng_LDADD) $(LIBS)

quikfold$(EXEEXT): $(quikfold_OBJECTS) $(quikfold_DEPENDENCIES) $(EXTRA_quikfold_DEPENDENCIES) 
	@rm -f quikfold$(EXEEXT)
	$(AM_V_F77LD)$(quikfold_LINK) $(quikfold_OBJECTS) $(quikfold_LDADD) $(LIBS)

sav2p_num$(EXEEXT): $(sav2p_num_OBJECTS) $(sav2p_num_DEPENDENCIES) $(EXTRA_sav2p_num_DEPENDENCIES) 
	@rm -f sav2p_num$(EXEEXT)
	$(AM_V_F77LD)$(sav2p_num_LINK) $(sav2p_num_OBJECTS) $(sav2p_num_LDADD) $(LIBS)

sav2plot$(EXEEXT): $(sav2plot_OBJECTS) $(sav2plot_DEPENDENCIES) $(EXTRA_sav2plot_DEPENDENCIES) 
	@rm -f sav2plot$(EXEEXT)
	$(AM_V_F77LD)$(sav2plot_LINK) $(sav2plot_OBJECTS) $(sav2plot_LDADD) $(LIBS)

scorer$(EXEEXT): $(scorer_OBJECTS) $(scorer_DEPENDENCIES) $(EXTRA_scorer_DEPENDENCIES) 
	@rm -f scorer$(EXEEXT)
	$(AM_V_F77LD)$(scorer_LINK) $(scorer_OBJECTS) $(scorer_LDADD) $(LIBS)

sir_graph$(EXEEXT): $(sir_graph_OBJECTS) $(sir_graph_DEPENDENCIES) $(EXTRA_sir_graph_DEPENDENCIES) 
	@rm -f sir_graph$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sir_graph_OBJECTS) $(sir_graph_LDADD) $(LIBS)

ss_count$(EXEEXT): $(ss_count_OBJECTS) $(ss_count_DEPENDENCIES) $(EXTRA_ss_count_DEPENDENCIES) 
	@rm -f ss_count$(EXEEXT)
	$(AM_V_F77LD)$(ss_count_LINK) $(ss_count_OBJECTS) $(ss_count_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boxplot_ng.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ct_boxplot_ng.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfold_datdir.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overlay_boxplot_ng.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sir_graph.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

add_dHdSTm-add-dHdSTm.o: add-dHdSTm.f
	$(AM_V_F77)$(F77) $(add_dHdSTm_FFLAGS) $(FFLAGS) -c -o add_dHdSTm-add-dHdSTm.o `test -f 'add-dHdSTm.f' || echo '$(srcdir)/'`add-dHdSTm.f

add_dHdSTm-add-dHdSTm.obj: add-dHdSTm.f
	$(AM_V_F77)$(F77) $(add_dHdSTm_FFLAGS) $(FFLAGS) -c -o add_dHdSTm-add-dHdSTm.obj `if test -f 'add-dHdSTm.f'; then $(CYGPATH_W) 'add-dHdSTm.f'; else $(CYGPATH_W) '$(srcdir)/add-dHdSTm.f'; fi`

add_dHdSTm2-add-dHdSTm2.o: add-dHdSTm2.f
	$(AM_V_F77)$(F77) $(add_dHdSTm2_FFLAGS) $(FFLAGS) -c -o add_dHdSTm2-add-dHdSTm2.o `test -f 'add-dHdSTm2.f' || echo '$(srcdir)/'`add-dHdSTm2.f

add_dHdSTm2-add-dHdSTm2.obj: add-dHdSTm2.f
	$(AM_V_F77)$(F77) $(add_dHdSTm2_FFLAGS) $(FFLAGS) -c -o add_dHdSTm2-add-dHdSTm2.obj `if test -f 'add-dHdSTm2.f'; then $(CYGPATH_W) 'add-dHdSTm2.f'; else $(CYGPATH_W) '$(srcdir)/add-dHdSTm2.f'; fi`

auxgen-auxgen.o: auxgen.f
	$(AM_V_F77)$(F77) $(auxgen_FFLAGS) $(FFLAGS) -c -o auxgen-auxgen.o `test -f 'auxgen.f' || echo '$(srcdir)/'`auxgen.f

auxgen-auxgen.obj: auxgen.f
	$(AM_V_F77)$(F77) $(auxgen_FFLAGS) $(FFLAGS) -c -o auxgen-auxgen.obj `if test -f 'auxgen.f'; then $(CYGPATH_W) 'auxgen.f'; else $(CYGPATH_W) '$(srcdir)/auxgen.f'; fi`

ct2bp-ct2bp.o: ct2bp.f
	$(AM_V_F77)$(F77) $(ct2bp_FFLAGS) $(FFLAGS) -c -o ct2bp-ct2bp.o `test -f 'ct2bp.f' || echo '$(srcdir)/'`ct2bp.f

ct2bp-ct2bp.obj: ct2bp.f
	$(AM_V_F77)$(F77) $(ct2bp_FFLAGS) $(FFLAGS) -c -o ct2bp-ct2bp.obj `if test -f 'ct2bp.f'; then $(CYGPATH_W) 'ct2bp.f'; else $(CYGPATH_W) '$(srcdir)/ct2bp.f'; fi`

ct_compare-ct_compare.o: ct_compare.f
	$(AM_V_F77)$(F77) $(ct_compare_FFLAGS) $(FFLAGS) -c -o ct_compare-ct_compare.o `test -f 'ct_compare.f' || echo '$(srcdir)/'`ct_compare.f

ct_compare-ct_compare.obj: ct_compare.f
	$(AM_V_F77)$(F77) $(ct_compare_FFLAGS) $(FFLAGS) -c -o ct_compare-ct_compare.obj `if test -f 'ct_compare.f'; then $(CYGPATH_W) 'ct_compare.f'; else $(CYGPATH_W) '$(srcdir)/ct_compare.f'; fi`

distance-distance.o: distance.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-distance.o `test -f 'distance.f' || echo '$(srcdir)/'`distance.f

distance-distance.obj: distance.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-distance.obj `if test -f 'distance.f'; then $(CYGPATH_W) 'distance.f'; else $(CYGPATH_W) '$(srcdir)/distance.f'; fi`

distance-bpin.o: bpin.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-bpin.o `test -f 'bpin.f' || echo '$(srcdir)/'`bpin.f

distance-bpin.obj: bpin.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-bpin.obj `if test -f 'bpin.f'; then $(CYGPATH_W) 'bpin.f'; else $(CYGPATH_W) '$(srcdir)/bpin.f'; fi`

distance-bpsrch.o: bpsrch.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-bpsrch.o `test -f 'bpsrch.f' || echo '$(srcdir)/'`bpsrch.f

distance-bpsrch.obj: bpsrch.f
	$(AM_V_F77)$(F77) $(distance_FFLAGS) $(FFLAGS) -c -o distance-bpsrch.obj `if test -f 'bpsrch.f'; then $(CYGPATH_W) 'bpsrch.f'; else $(CYGPATH_W) '$(srcdir)/bpsrch.f'; fi`

efn-efn.o: efn.f
	$(AM_V_F77)$(F77) $(efn_FFLAGS) $(FFLAGS) -c -o efn-efn.o `test -f 'efn.f' || echo '$(srcdir)/'`efn.f

efn-efn.obj: efn.f
	$(AM_V_F77)$(F77) $(efn_FFLAGS) $(FFLAGS) -c -o efn-efn.obj `if test -f 'efn.f'; then $(CYGPATH_W) 'efn.f'; else $(CYGPATH_W) '$(srcdir)/efn.f'; fi`

h_num-h-num.o: h-num.f
	$(AM_V_F77)$(F77) $(h_num_FFLAGS) $(FFLAGS) -c -o h_num-h-num.o `test -f 'h-num.f' || echo '$(srcdir)/'`h-num.f

h_num-h-num.obj: h-num.f
	$(AM_V_F77)$(F77) $(h_num_FFLAGS) $(FFLAGS) -c -o h_num-h-num.obj `if test -f 'h-num.f'; then $(CYGPATH_W) 'h-num.f'; else $(CYGPATH_W) '$(srcdir)/h-num.f'; fi`

nafold-main.o: main.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-main.o `test -f 'main.f' || echo '$(srcdir)/'`main.f

nafold-main.obj: main.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-main.obj `if test -f 'main.f'; then $(CYGPATH_W) 'main.f'; else $(CYGPATH_W) '$(srcdir)/main.f'; fi`

nafold-rna.o: rna.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-rna.o `test -f 'rna.f' || echo '$(srcdir)/'`rna.f

nafold-rna.obj: rna.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-rna.obj `if test -f 'rna.f'; then $(CYGPATH_W) 'rna.f'; else $(CYGPATH_W) '$(srcdir)/rna.f'; fi`

nafold-misc.o: misc.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-misc.o `test -f 'misc.f' || echo '$(srcdir)/'`misc.f

nafold-misc.obj: misc.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-misc.obj `if test -f 'misc.f'; then $(CYGPATH_W) 'misc.f'; else $(CYGPATH_W) '$(srcdir)/misc.f'; fi`

nafold-efiles.o: efiles.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-efiles.o `test -f 'efiles.f' || echo '$(srcdir)/'`efiles.f

nafold-efiles.obj: efiles.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-efiles.obj `if test -f 'efiles.f'; then $(CYGPATH_W) 'efiles.f'; else $(CYGPATH_W) '$(srcdir)/efiles.f'; fi`

nafold-sort.o: sort.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-sort.o `test -f 'sort.f' || echo '$(srcdir)/'`sort.f

nafold-sort.obj: sort.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-sort.obj `if test -f 'sort.f'; then $(CYGPATH_W) 'sort.f'; else $(CYGPATH_W) '$(srcdir)/sort.f'; fi`

nafold-dc.o: dc.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-dc.o `test -f 'dc.f' || echo '$(srcdir)/'`dc.f

nafold-dc.obj: dc.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-dc.obj `if test -f 'dc.f'; then $(CYGPATH_W) 'dc.f'; else $(CYGPATH_W) '$(srcdir)/dc.f'; fi`

nafold-bits-gnu.o: bits-gnu.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-bits-gnu.o `test -f 'bits-gnu.f' || echo '$(srcdir)/'`bits-gnu.f

nafold-bits-gnu.obj: bits-gnu.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-bits-gnu.obj `if test -f 'bits-gnu.f'; then $(CYGPATH_W) 'bits-gnu.f'; else $(CYGPATH_W) '$(srcdir)/bits-gnu.f'; fi`

nafold-formid.o: formid.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-formid.o `test -f 'formid.f' || echo '$(srcdir)/'`formid.f

nafold-formid.obj: formid.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-formid.obj `if test -f 'formid.f'; then $(CYGPATH_W) 'formid.f'; else $(CYGPATH_W) '$(srcdir)/formid.f'; fi`

nafold-multid.o: multid.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-multid.o `test -f 'multid.f' || echo '$(srcdir)/'`multid.f

nafold-multid.obj: multid.f
	$(AM_V_F77)$(F77) $(nafold_FFLAGS) $(FFLAGS) -c -o nafold-multid.obj `if test -f 'multid.f'; then $(CYGPATH_W) 'multid.f'; else $(CYGPATH_W) '$(srcdir)/multid.f'; fi`

newtemp-newtemp.o: newtemp.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-newtemp.o `test -f 'newtemp.f' || echo '$(srcdir)/'`newtemp.f

newtemp-newtemp.obj: newtemp.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-newtemp.obj `if test -f 'newtemp.f'; then $(CYGPATH_W) 'newtemp.f'; else $(CYGPATH_W) '$(srcdir)/newtemp.f'; fi`

newtemp-ion.o: ion.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-ion.o `test -f 'ion.f' || echo '$(srcdir)/'`ion.f

newtemp-ion.obj: ion.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-ion.obj `if test -f 'ion.f'; then $(CYGPATH_W) 'ion.f'; else $(CYGPATH_W) '$(srcdir)/ion.f'; fi`

newtemp-dc.o: dc.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-dc.o `test -f 'dc.f' || echo '$(srcdir)/'`dc.f

newtemp-dc.obj: dc.f
	$(AM_V_F77)$(F77) $(newtemp_FFLAGS) $(FFLAGS) -c -o newtemp-dc.obj `if test -f 'dc.f'; then $(CYGPATH_W) 'dc.f'; else $(CYGPATH_W) '$(srcdir)/dc.f'; fi`

quikfold-quik.o: quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-quik.o `test -f 'quik.f' || echo '$(srcdir)/'`quik.f

quikfold-quik.obj: quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-quik.obj `if test -f 'quik.f'; then $(CYGPATH_W) 'quik.f'; else $(CYGPATH_W) '$(srcdir)/quik.f'; fi`

quikfold-rna-quik.o: rna-quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-rna-quik.o `test -f 'rna-quik.f' || echo '$(srcdir)/'`rna-quik.f

quikfold-rna-quik.obj: rna-quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-rna-quik.obj `if test -f 'rna-quik.f'; then $(CYGPATH_W) 'rna-quik.f'; else $(CYGPATH_W) '$(srcdir)/rna-quik.f'; fi`

quikfold-misc-quik.o: misc-quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-misc-quik.o `test -f 'misc-quik.f' || echo '$(srcdir)/'`misc-quik.f

quikfold-misc-quik.obj: misc-quik.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-misc-quik.obj `if test -f 'misc-quik.f'; then $(CYGPATH_W) 'misc-quik.f'; else $(CYGPATH_W) '$(srcdir)/misc-quik.f'; fi`

quikfold-dc.o: dc.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-dc.o `test -f 'dc.f' || echo '$(srcdir)/'`dc.f

quikfold-dc.obj: dc.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-dc.obj `if test -f 'dc.f'; then $(CYGPATH_W) 'dc.f'; else $(CYGPATH_W) '$(srcdir)/dc.f'; fi`

quikfold-multid.o: multid.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-multid.o `test -f 'multid.f' || echo '$(srcdir)/'`multid.f

quikfold-multid.obj: multid.f
	$(AM_V_F77)$(F77) $(quikfold_FFLAGS) $(FFLAGS) -c -o quikfold-multid.obj `if test -f 'multid.f'; then $(CYGPATH_W) 'multid.f'; else $(CYGPATH_W) '$(srcdir)/multid.f'; fi`

sav2p_num-sav2p-num.o: sav2p-num.f
	$(AM_V_F77)$(F77) $(sav2p_num_FFLAGS) $(FFLAGS) -c -o sav2p_num-sav2p-num.o `test -f 'sav2p-num.f' || echo '$(srcdir)/'`sav2p-num.f

sav2p_num-sav2p-num.obj: sav2p-num.f
	$(AM_V_F77)$(F77) $(sav2p_num_FFLAGS) $(FFLAGS) -c -o sav2p_num-sav2p-num.obj `if test -f 'sav2p-num.f'; then $(CYGPATH_W) 'sav2p-num.f'; else $(CYGPATH_W) '$(srcdir)/sav2p-num.f'; fi`

sav2plot-sav2plot.o: sav2plot.f
	$(AM_V_F77)$(F77) $(sav2plot_FFLAGS) $(FFLAGS) -c -o sav2plot-sav2plot.o `test -f 'sav2plot.f' || echo '$(srcdir)/'`sav2plot.f

sav2plot-sav2plot.obj: sav2plot.f
	$(AM_V_F77)$(F77) $(sav2plot_FFLAGS) $(FFLAGS) -c -o sav2plot-sav2plot.obj `if test -f 'sav2plot.f'; then $(CYGPATH_W) 'sav2plot.f'; else $(CYGPATH_W) '$(srcdir)/sav2plot.f'; fi`

scorer-scorer.o: scorer.f
	$(AM_V_F77)$(F77) $(scorer_FFLAGS) $(FFLAGS) -c -o scorer-scorer.o `test -f 'scorer.f' || echo '$(srcdir)/'`scorer.f

scorer-scorer.obj: scorer.f
	$(AM_V_F77)$(F77) $(scorer_FFLAGS) $(FFLAGS) -c -o scorer-scorer.obj `if test -f 'scorer.f'; then $(CYGPATH_W) 'scorer.f'; else $(CYGPATH_W) '$(srcdir)/scorer.f'; fi`

ss_count-ss-count.o: ss-count.f
	$(AM_V_F77)$(F77) $(ss_count_FFLAGS) $(FFLAGS) -c -o ss_count-ss-count.o `test -f 'ss-count.f' || echo '$(srcdir)/'`ss-count.f

ss_count-ss-count.obj: ss-count.f
	$(AM_V_F77)$(F77) $(ss_count_FFLAGS) $(FFLAGS) -c -o ss_count-ss-count.obj `if test -f 'ss-count.f'; then $(CYGPATH_W) 'ss-count.f'; else $(CYGPATH_W) '$(srcdir)/ss-count.f'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/boxplot_ng.Po
	-rm -f ./$(DEPDIR)/ct_boxplot_ng.Po
	-rm -f ./$(DEPDIR)/mfold_datdir.Po
	-rm -f ./$(DEPDIR)/overlay_boxplot_ng.Po
	-rm -f ./$(DEPDIR)/sir_graph.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/boxplot_ng.Po
	-rm -f ./$(DEPDIR)/ct_boxplot_ng.Po
	-rm -f ./$(DEPDIR)/mfold_datdir.Po
	-rm -f ./$(DEPDIR)/overlay_boxplot_ng.Po
	-rm -f ./$(DEPDIR)/sir_graph.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


newtemp.f: pre-newtemp.f
	@@AWK@ -v ddir=$(pkgdatadir) '{sub("PKGDATADIR",ddir); print $0}' pre-newtemp.f > newtemp.f

efiles.f: pre-efiles.f
	@@AWK@ -v ddir=$(pkgdatadir) '{sub("PKGDATADIR",ddir); print $0}' pre-efiles.f > efiles.f

efn.f: pre-efn.f
	@@AWK@ -v ddir=$(pkgdatadir) '{sub("PKGDATADIR",ddir); print $0}' pre-efn.f > efn.f

main.f: pre-main.f
	@@AWK@ -v pack=$(PACKAGE) -v vers=$(VERSION) \
	'{sub("PACKAGE",pack); sub("VERSION",vers); print $0}' \
	pre-main.f > main.f

misc-quik.f: pre-misc-quik.f
	@@AWK@ -v ddir=$(pkgdatadir) '{sub("PKGDATADIR",ddir); print $0}' pre-misc-quik.f > misc-quik.f

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
